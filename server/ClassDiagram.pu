@startuml

class DisplayProperty {
    -commentLane
    -commentDisplayTime
    -commentMoveWidth
    -commentHeight
    -rows
    -socket

    -setWindowSize()
    +getWindowSize()
    +getCommentDisplayTime()
    +getCommentLane()
    +calcCommentRow(commentMessage, width)
    +connectSocketIoServer()
}

class CreateCommentLaneHtml {
    +measureStringWidth(string)
}

class Css {
    +createComment(strMessage)
}

class Gsap {
    -gsapCount

    -getGsapCount()
    +createComment(strMessage)
}

class CanvasState {
    -canvas
    -context
    -fps
    -commentList

    -measureStringWidth(comment)
    +createComment(commentMessage)
    +drawNextFrame()
    +getFps()
}

class Pixi_js {
    -app
    -style
    -commentList
    -fps

    +createComment(commentMessage)
    +drawNextFrame()
    +getCommentList()
    +getFps()
}

class WebWorker {
    +createComment(strMessage)
}

DisplayProperty <|-- CreateCommentLaneHtml
DisplayProperty <|-- CanvasState
DisplayProperty <|-- Pixi_js
CreateCommentLaneHtml <|-- Css
CreateCommentLaneHtml <|-- Gsap
Css <|-- WebWorker
@enduml